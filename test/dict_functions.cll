int_dict = <int,int>{0:-0};
string_dict = <string,string>{};

sprint((string)(dget(int_dict,0)));

dadd(int_dict,1,-1);

sprint((string)(dget(int_dict,1)));
sprint((string)(dsize(int_dict)));

string_of_dict = <string a, string k, string v:string>{
    a ^ k ^ ':' ^ v ^ ' ';
};

dadd(string_dict,'a','A');
dadd(string_dict,'b','B');
dadd(string_dict,'c','C');
dadd(string_dict,'d','D');

sprint((string)(dmem(string_dict,'a')));
sprint((string)(dmem(string_dict,'z')));

s = dfold(string_of_dict,'',string_dict);
sprint(s);
string_dict = dremove(string_dict,'d');
s = dfold(string_of_dict,'',string_dict);
sprint(s);

sum_keys = <int a, int k, int v:int>{
    if:int (k % 2 == 0) {
        sprint('even key: ' ^ ((string)k));
    } else {
        sprint('odd key: ' ^ ((string)k));
    };
    a + k;
};

sum_values = <int a, int k, int v:int>{
    if:int (v % 2 == 0) {
        sprint('even value: ' ^ ((string)v));
    } else {
        sprint('odd value: ' ^ ((string)v));
    };
    a + v;
};

dadd(int_dict,2,-2);
dadd(int_dict,3,-3);
dadd(int_dict,4,-4);

sprint((string)(dmem(int_dict,2)));
sprint((string)(dmem(int_dict,9)));

sprint((string)(dsize(int_dict)));

keysum = dfold(sum_keys,0,int_dict);
valsum = dfold(sum_values,0,int_dict);

sprint((string)keysum);
sprint((string)valsum);

add_value_bang = <string k, string v:string> {
    v ^ '!';
};

string_dict_bang = dmap(add_value_bang,string_dict);
s = dfold(string_of_dict,'',string_dict_bang);
sprint(s);
